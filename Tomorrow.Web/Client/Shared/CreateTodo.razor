@inject HttpClient HttpClient
@inherits OwningComponentBase<HttpHelper>

<EditForm Model="@todo" OnValidSubmit="@CreateAsync">
    @if (created)
    {
        <MudAlert Severity="Severity.Success">
            Todo created successfully!
        </MudAlert>
    }
    <DataAnnotationsValidator />
    <ValidationSummary />

    <MudTextField Label="Name" Variant="Variant.Outlined" @bind-Value="@todo.Name" />
    <MudSlider T="int" Min="0" Max="10" Step="1" @bind-Value="todo.Priority" Color="Color.Tertiary">
        Priority
    </MudSlider>
    <div class="d-flex justify-space-between align-items-center mb-3">
        <MudText Color="Color.Success">Not important</MudText>
        <MudText Color="Color.Error">Very important</MudText>
    </div>

    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mb-3">Create</MudButton>
</EditForm>
@code {
    [Parameter]
    public string GroupId { get; set; }
    private Todo todo = new Todo();
    private bool created = false;
    [Parameter]
    public EventCallback<Todo> OnCreate { get; set; }

    public async Task CreateAsync()
    {
        todo.GroupId = GroupId;
        todo = await Service.CreateTodoAsync(todo);
        created = true;
        await OnCreate.InvokeAsync(todo);
        todo = new Todo();
        StateHasChanged();
    }
}