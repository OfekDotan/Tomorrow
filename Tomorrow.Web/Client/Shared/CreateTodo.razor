@inject HttpClient HttpClient

<EditForm Model="@todo" OnValidSubmit="@CreateAsync">
    @if (created)
    {
        <MudAlert Severity="Severity.Success">
            Todo created successfully!
        </MudAlert>
    }
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText class="form-control" id="name" @bind-Value="@todo.Name" />
    </div>
    <div class="mb-3">
        <label for="name" class="form-label">Priority</label>
        <InputNumber class="form-control" id="priority" @bind-Value="@todo.Priority" />
    </div>
    <button class="btn btn-primary mb-3" type="submit">Submit</button>
</EditForm>
@code {
    [Parameter]
    public string GroupId { get; set; }
    private Todo todo = new Todo();
    private bool created = false;
    [Parameter]
    public EventCallback<Todo> OnCreate { get; set; }

    public async Task CreateAsync()
    {
        todo.GroupId = GroupId;
        var response = await HttpClient.PostAsJsonAsync("api/todos", todo);
        response.EnsureSuccessStatusCode();
        todo = await response.Content.ReadFromJsonAsync<Todo>();
        created = true;
        await OnCreate.InvokeAsync(todo);
        todo = new Todo();
        StateHasChanged();
    }
}